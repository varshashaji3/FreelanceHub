# Generated by Django 5.0.4 on 2025-03-31 21:38

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_subscriptionplan_is_active'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='subscriptionplan',
            options={'ordering': ['price', 'name'], 'verbose_name': 'Subscription Plan', 'verbose_name_plural': 'Subscription Plans'},
        ),
        migrations.AlterModelOptions(
            name='usersubscription',
            options={'ordering': ['-start_date']},
        ),
        migrations.RemoveField(
            model_name='subscriptionplan',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='subscriptionplan',
            name='features',
        ),
        migrations.RemoveField(
            model_name='usersubscription',
            name='amount',
        ),
        migrations.RemoveField(
            model_name='usersubscription',
            name='payment_status',
        ),
        migrations.RemoveField(
            model_name='usersubscription',
            name='razorpay_order_id',
        ),
        migrations.RemoveField(
            model_name='usersubscription',
            name='razorpay_payment_id',
        ),
        migrations.RemoveField(
            model_name='usersubscription',
            name='subscription_plan',
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='ai_freelancer_recommendations',
            field=models.BooleanField(default=False, help_text='Enable AI freelancer recommendations for clients'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='ai_project_recommendations',
            field=models.BooleanField(default=False, help_text='Enable AI project recommendations for freelancers'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='ai_skill_gap_analysis',
            field=models.BooleanField(default=False, help_text='Enable AI skill gap analysis for freelancers'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='can_create_events',
            field=models.BooleanField(default=False, help_text='Allow clients to create events'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='can_create_portfolio',
            field=models.BooleanField(default=False, help_text='Allow freelancers to create portfolio'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='can_hire_freelancer',
            field=models.BooleanField(default=False, help_text='Allow clients to hire freelancers'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='can_participate_events',
            field=models.BooleanField(default=False, help_text='Allow freelancers to participate in events'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='When the plan was created'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='duration_days',
            field=models.IntegerField(default=30, help_text='Duration of the plan in days'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_proposals_limit',
            field=models.IntegerField(default=0, help_text='Maximum number of proposals a freelancer can submit'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='project_creation_limit',
            field=models.IntegerField(default=0, help_text='Maximum number of projects a client can create'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='team_creation',
            field=models.BooleanField(default=False, help_text='Allow freelancers to create teams'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the plan was last updated'),
        ),
        migrations.AddField(
            model_name='usersubscription',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='usersubscription',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.subscriptionplan'),
        ),
        migrations.AddField(
            model_name='usersubscription',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the plan is currently active'),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='name',
            field=models.CharField(help_text='Plan name (e.g., Basic, Premium, Pro)', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='price',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Price for the plan', max_digits=10),
        ),
        migrations.AlterField(
            model_name='usersubscription',
            name='end_date',
            field=models.DateTimeField(blank=True, help_text='When the subscription ends', null=True),
        ),
        migrations.AlterField(
            model_name='usersubscription',
            name='start_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='usersubscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL),
        ),
    ]
